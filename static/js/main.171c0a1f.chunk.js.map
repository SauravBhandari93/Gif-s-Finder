{"version":3,"sources":["Components/Header.js","Pages/HomePage.js","Components/Favorite.js","Pages/FavoriteGifs.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","HomePage","useState","galleryGifs","setGalleryGifs","isLoading","setIsLoading","input","setInput","selection","setSelection","hover","setHover","useEffect","fetch","encodeURI","then","response","json","data","obj","style","display","justifyContent","alignItems","height","CircularProgress","color","TextField","id","label","variant","value","onChange","event","target","Button","href","onClick","map","gif","index","onMouseOver","e","src","images","original","url","alt","width","favs","localStorage","getItem","JSON","parse","filter","fav","length","setItem","stringify","console","log","Favorite","isfav","setFav","textAlign","removeItem","FavoriteGifs","App","Container","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.171c0a1f.chunk.js","sourcesContent":["import \"../styles/headerStyle.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction Header() {\n  return (\n    <div className=\"header\">\n      <Link to=\"/\">\n        <h1>Search</h1>\n      </Link>\n      <Link to=\"/favorite\">\n        <h1>Favorite</h1>\n      </Link>\n    </div>\n  );\n}\nexport default Header;\n","import TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport \"../styles/homepageStyle.css\";\nimport { useEffect, useState } from \"react\";\n\nfunction HomePage() {\n  const [galleryGifs, setGalleryGifs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [input, setInput] = useState(\"\");\n  const [selection, setSelection] = useState(\"all\");\n  const [hover, setHover] = useState(\"\");\n  //localStorage.removeItem('favs');\n\n  useEffect(() => {\n    fetch(\n      `https://api.giphy.com/v1/gifs/search?limit=20&api_key=dCGrnKPTBrjaXvCsR4QGoY1qRVxg3Qij&q=${encodeURI(\n        selection\n      )}`\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setIsLoading(false);\n        let obj = [...data.data];\n        setGalleryGifs(obj);\n      });\n  }, [selection]);\n  if (isLoading) {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100vh\",\n        }}\n      >\n        <CircularProgress color=\"secondary\" />\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div className=\"search\">\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Search Gifs\"\n          variant=\"outlined\"\n          value={input}\n          onChange={(event) => {\n            setInput(event.target.value);\n          }}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          href=\"#contained-buttons\"\n          onClick={() => {\n            setSelection(input);\n            setIsLoading(true);\n          }}\n        >\n          Search\n        </Button>\n      </div>\n\n      <div className=\"gallery\">\n        {galleryGifs.map((gif, index) => {\n          return (\n            <div\n              key={index}\n              className=\"gal\"\n              onMouseOver={(e) => {\n                setHover(index);\n              }}\n            >\n              <img\n                src={gif.images.original.url}\n                alt=\"gif\"\n                style={{ height: \"15vw\", width: \"15vw\" }}\n              />\n              {hover === index ? (\n                <div className=\"addToFav\">\n                  <button\n                    onClick={(e) => {\n                      let favs = localStorage.getItem(\"favs\");\n\n                      if (favs) {\n                        favs = JSON.parse(favs);\n                        if (\n                          favs.filter((fav) => {\n                            return fav.id === gif.id;\n                          }).length === 0\n                        ) {\n                          favs = [...favs, gif];\n                          localStorage.setItem(\"favs\", JSON.stringify(favs));\n                        }\n                      } else {\n                        favs = [gif];\n                        localStorage.setItem(\"favs\", JSON.stringify(favs));\n                      }\n\n                      console.log(favs);\n                    }}\n                  >\n                    Add to favourite\n                  </button>\n                </div>\n              ) : (\n                <div></div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\nexport default HomePage;\n","import \"../styles/homepageStyle.css\";\nimport { useState } from \"react\";\n\nfunction Favorite() {\n  const [isfav, setFav] = useState(true);\n  const favs = localStorage.getItem(\"favs\");\n  console.log(isfav);\n\n  return (\n    <div>\n      {favs ? (\n        <div>\n          <div className=\"clear\">\n            <h1 style={{ textAlign: \"center\" }}>Selected Items</h1>\n            <button\n              onClick={() => {\n                localStorage.removeItem(\"favs\");\n                setFav(false);\n              }}\n            >\n              Clear\n            </button>\n          </div>\n\n          <div className=\"gallery\">\n            {JSON.parse(favs).map((fav, index) => {\n              return (\n                <div key={index} className=\"gal\">\n                  <img\n                    src={fav.images.original.url}\n                    alt=\"gif\"\n                    style={{ height: \"15vw\", width: \"15vw\" }}\n                  />\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      ) : (\n        <h1 style={{ textAlign: \"center\", color: \"red\" }}>NO ITEM</h1>\n      )}\n    </div>\n  );\n}\nexport default Favorite;\n","import Favorite from \"../Components/Favorite\";\n\nfunction FavoriteGifs() {\n  return <Favorite />;\n}\nexport default FavoriteGifs;\n","import {BrowserRouter,Route, Switch} from \"react-router-dom\";\nimport Container from '@material-ui/core/Container';\nimport Header from \"./Components/Header\";\nimport HomePage from './Pages/HomePage';\nimport FavoriteGifs from \"./Pages/FavoriteGifs\";\nfunction App() {\n  return (<Container>\n        <BrowserRouter>\n          <Header />\n          <Switch>\n          <Route exact path=\"/favorite\">\n              <FavoriteGifs />\n            </Route>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n        </Container>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}